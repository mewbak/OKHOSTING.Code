namespace <<Interface.NameSpace>>
{
	<<Interface.Attributes: {att | [<<att.Attribute.Type.NameResult>>] }; separator="\n">>
	<<Interface.Access>> interface <<Interface.Name>><<if(Interface.Requires)>>: <<Interface.Requires: { req | <<req.NameResult>> }; separator=", ">><<endif>>
	{
		<<Interface.Events: { m | <<m.ContentResult>> }; separator="\n">>
		<<Interface.Fields: { m | <<m.ReturnType.NameResult>> <<m.NameResult>> }; separator=";\n">>
		
		<<Interface.Properties: { m | 
		<<m.ReturnType.NameResult>> <<m.NameResult>> { <<if(m.GetMethod)>> get; <<endif>><<if(m.SetMethod)>> set; <<endif>> \} 
		}; separator="\n">>
		
		<<Interface.Methods: { m | 
		<<if(!m.IsPropertyMethod)>>
		<<m.ReturnType.NameResult>> <<m.NameResult>><<if(m.IsGeneric)>> < <<m.GenericArguments: { genArg | <<genArg.ArgumentType.NameResult>> };separator=", ">> > <<endif>>(<<m.Arguments: { arg | <<arg.Type.NameResult>> <<arg.Name>>};separator=", ">>);
		<<endif>>
		}; separator="\n">>
	}
}